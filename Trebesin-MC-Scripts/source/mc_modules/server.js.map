{"version":3,"sources":["mc_modules/server.js"],"names":[],"mappings":"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","file":"server.js","sourcesContent":["import { world, system } from \"@minecraft/server\";\nimport { ChunkManager, getSubchunksCoords } from './chunk.js';\nimport { randInt } from '../js_modules/random.js';\nimport { insertToArray, deleteFromArray } from \"../js_modules/array.js\";\nimport * as Debug from './../plugins/debug/debug'\n\n/**\n * @description - Class with helper functions that relate to scheduling or backend functioning of the server.\n */\nexport class Server {\n    constructor(initialTick = 0) {\n        this.#tick = initialTick;\n\n        //## Relative Tick, Loaded Players, Custom Events\n        system.runInterval(() => {\n            this.#tick++;\n            for (const eventId in this.#eventsRegister) this.#eventsRegister[eventId].execute?.(this);\n            if (!this.#playersLoaded && world.getAllPlayers().length) this.#playersLoaded = true;\n        },1);\n\n        //## Cancel Termination:\n        system.events.beforeWatchdogTerminate.subscribe((eventData) => {\n            eventData.cancel = this.#watchdogTerminate;\n        });\n    }\n\n    #eventsRegister = {}\n    events = {}\n\n    #tick = 0;\n    #playersLoaded = false;\n    #watchdogTerminate = false;\n\n    /**\n     * @param {boolean} value - Set to `true` to cancel watchdog server termination.\n     */\n    set cancelTerminations(value) {\n        this.#watchdogTerminate = value;\n        return this.#watchdogTerminate;\n    }\n\n    get tick() {\n        return this.#tick;\n    }\n\n    get playersLoaded() {\n        return this.#playersLoaded;\n    }\n\n    registerEvent(eventId,eventObject) {\n        this.#eventsRegister[eventId] = eventObject;\n        eventObject.initialize?.(this);\n        for (const eventCallback in eventObject.callbacks) {\n            this.events[eventCallback] = eventObject.callbacks[eventCallback];\n        }\n        \n    }\n\n    //! The following functions are DEPRECATED and left only for compatibility. Use other exports instead.\n    /** !!DEPRECATED!! use other exports instead\n     * @param {object} eventObject Object containing `subscribe()` and `unsubscribe()` methods.\n     * @param {Function} callback Callback that gets passed event data, it must return an object that contains property `tries` that modifies the tries counter and a property `saveValue` which gets saved and counts the event as success if its value isn't nullish.\n     * @param {EventWaitOptions} options Options that define how to wait for the event.\n     */\n    async waitForEvent(eventObject,callback,options = {}) {\n        const OPTIONS = Object.assign({tries: 10,timeout: 200,amount: 1},options);\n        return new Promise((resolve, reject) => {\n            let savedEvents = [];\n            let timeoutIndex;\n            const event = eventObject.subscribe((data) => {\n                const result = callback(data);\n                OPTIONS.tries += result?.tries ?? 0;\n                if (OPTIONS.tries <= 0) {\n                    if (timeoutIndex != null) system.clearRun(timeoutIndex);\n                    eventObject.unsubscribe(event);\n                    reject({timeout:false,tries:true});\n                }\n                \n                if (result?.saveValue != null) {\n                    savedEvents.push(result.saveValue);\n                    if (\n                        (OPTIONS.amount > 0 && savedEvents.length === OPTIONS.amount) || \n                        (OPTIONS.amount < 0 && savedEvents.length + OPTIONS.amount === 0)\n                    ) {\n                        if (timeoutIndex != null) system.clearRun(timeoutIndex);\n                        eventObject.unsubscribe(event);\n                        resolve(savedEvents);\n                    }\n                }\n            });\n\n            if (OPTIONS.timeout > 0) {\n                if (OPTIONS.amount > 0) {\n                    timeoutIndex = system.runTimeout(() => {\n                        eventObject.unsubscribe(event);\n                        reject({timeout:true,tries:false});\n                    },OPTIONS.timeout);\n                } else {\n                    timeoutIndex = system.runTimeout(() => {\n                        eventObject.unsubscribe(event);\n                        resolve(savedEvents);\n                    },OPTIONS.timeout);\n                }\n            }\n        });\n    }\n\n    /**\n     * !!DEPRECATED!! use other exports instead\n     * @param {Function} callback Callback that runs on the next tick,its return value is resolved or its error is rejected.\n     * @returns {Promise}\n     */\n     async waitForNextTick(callback) {\n        return new Promise((resolve,reject) => {\n            system.runTimeout(() => {\n                try {\n                    resolve(callback());\n                } catch (error) {\n                    reject(error)\n                }\n            },1);\n        })\n    }\n}\n\n/**\n * Returns promise that executes the callback function and gets resolved/rejected on the defined following tick.\n * @param {Function} callback Callback that runs on the defined tick, its return value is resolved or its error is rejected.\n * @param {number} ticks Amount of ticks to wait for. Defaults to the next tick (1).\n * @returns {Promise}\n */\nexport async function waitForTick(callback,ticks = 1) {\n    return new Promise((resolve,reject) => {\n        system.runTimeout(() => {\n            try {\n                resolve(callback());\n            } catch (error) {\n                reject(error)\n            }\n        },ticks);\n    })\n}\n\n/**\n * @typedef EventWaitOptions Options that define how to wait for the event.\n * @property {number} tries A variable that changes everytime the event fires depending on the condition return value if it is a number. Getting tires to/below 0 results in rejection of the promise.\n * @property {number} timeout Number of ticks before rejecting the promise. Enter 0 for infinite timeout (not recommended).\n * @property {number} amount Number of events to wait for before resolving the promise, it must get there or else the promise times out. 0 will wait until the timeout and resolve everything that met the condition. Negative values will resolve the promise even if it doesn't get to the requested amount.\n */\n\n/**\n * @param {object} eventObject Object containing `subscribe()` and `unsubscribe()` methods.\n * @param {Function} callback Callback that gets passed event data, it must return an object that contains property `tries` that modifies the tries counter and a property `saveValue` which gets saved and counts the event as success if its value isn't nullish.\n * @param {EventWaitOptions} options Options that define how to wait for the event.\n */\nexport async function waitForEvent(eventObject,callback,options = {}) {\n    const OPTIONS = Object.assign({tries: 10,timeout: 200,amount: 1},options);\n    return new Promise((resolve, reject) => {\n        let savedEvents = [];\n        let timeoutIndex;\n        const event = eventObject.subscribe((data) => {\n            const result = callback(data);\n            OPTIONS.tries += result?.tries ?? 0;\n            if (OPTIONS.tries <= 0) {\n                if (timeoutIndex != null) system.clearRun(timeoutIndex);\n                eventObject.unsubscribe(event);\n                reject({timeout:false,tries:true});\n            }\n            \n            if (result?.saveValue != null) {\n                savedEvents.push(result.saveValue);\n                if (\n                    (OPTIONS.amount > 0 && savedEvents.length === OPTIONS.amount) || \n                    (OPTIONS.amount < 0 && savedEvents.length + OPTIONS.amount === 0)\n                ) {\n                    if (timeoutIndex != null) system.clearRun(timeoutIndex);\n                    eventObject.unsubscribe(event);\n                    resolve(savedEvents);\n                }\n            }\n        });\n\n        if (OPTIONS.timeout > 0) {\n            if (OPTIONS.amount > 0) {\n                timeoutIndex = system.runTimeout(() => {\n                    eventObject.unsubscribe(event);\n                    reject({timeout:true,tries:false});\n                },OPTIONS.timeout);\n            } else {\n                timeoutIndex = system.runTimeout(() => {\n                    eventObject.unsubscribe(event);\n                    resolve(savedEvents);\n                },OPTIONS.timeout);\n            }\n        }\n    });\n}\n\nexport class ServerEventCallback {\n    constructor() {\n        this.saved = [];\n    }\n    subscribe(callback) {\n        return insertToArray(this.saved,callback);\n    }\n    unsubscribe(index) {\n        deleteFromArray(this.saved,index);\n    }\n    runCallbacks(eventData,errorHandle = null) {\n        for (let callbackIndex = 0;callbackIndex < this.saved.length;callbackIndex++) {\n            try {\n                this.saved[callbackIndex](eventData);\n            } catch (error) {\n                if (errorHandle) errorHandle(error);\n            }\n        }   \n    }\n    saved;\n}\n\n\n//! TESTING\nimport * as VectorMath from '../js_modules/vectorMath.js';\n/**\n * !! TESTING !!\n * @param {*} callback \n * @param {*} loadedChunks \n * @param {*} tickSpeed \n */\nfunction executeRandomTick(callback/*Array*/,loadedChunks,tickSpeed) {\n    //if (callbackArray.length) {\n        for (const dimensionId in loadedChunks) {\n            const dimension = world.getDimension(dimensionId);\n            const chunks = loadedChunks[dimensionId];\n            for (let chunkIndex = 0;chunkIndex < chunks.length;chunkIndex++) {\n                const subChunks = getSubchunksCoords(chunks[chunkIndex],true);\n                for (let subChunkIndex = 0;subChunkIndex < subChunks.length;subChunkIndex++) {\n                    //!the performance problem lies here:\n                    //!40-45% CPU Usage Getting The Block, 40-45% CPU Usage Generating the Number :/\n                    const subChunk = subChunks[subChunkIndex];\n                    const subChunkEnd = VectorMath.sum(subChunk,{x:15,y:15,z:15});\n                    for (let index = 0;index <= tickSpeed;index++) {\n                        callback(dimension.getBlock({\n                            x: randInt(subChunk.x,subChunkEnd.x),\n                            y: randInt(subChunk.y,subChunkEnd.y),\n                            z: randInt(subChunk.z,subChunkEnd.z)\n                        }));\n                        //for (let callbackIndex = 0;callbackIndex < callbackArray.length;callbackIndex++) {\n                        //    callbackArray[callbackIndex](block);\n                        //}\n                    }\n                }\n            }\n        }\n    //}\n}\n"]}