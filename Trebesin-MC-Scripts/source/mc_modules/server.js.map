{"version":3,"sources":["mc_modules/server.js"],"names":[],"mappings":";;;;;;;;;;;;AAAA,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,mBAAmB,CAAC;AAClD,OAAO,EAAE,YAAY,EAAE,kBAAkB,EAAE,MAAM,YAAY,CAAC;AAC9D,OAAO,EAAE,OAAO,EAAE,MAAM,yBAAyB,CAAC;AAClD,OAAO,EAAE,aAAa,EAAE,eAAe,EAAE,MAAM,wBAAwB,CAAC;AACxE,OAAO,KAAK,KAAK,MAAM,0BAA0B,CAAA;AAEjD;;GAEG;AACH,MAAM,OAAO,MAAM;IACf,YAAY,WAAW,GAAG,CAAC;QAgB3B,iCAAkB,EAAE,EAAA;QACpB,WAAM,GAAG,EAAE,CAAA;QAEX,uBAAQ,CAAC,EAAC;QACV,gCAAiB,KAAK,EAAC;QACvB,oCAAqB,KAAK,EAAC;QApBvB,uBAAA,IAAI,gBAAS,WAAW,MAAA,CAAC;QAEzB,iDAAiD;QACjD,MAAM,CAAC,WAAW,CAAC,GAAG,EAAE;;YACpB,2CAAA,CAAA,oDAAU,EAAV,IAAY,IAAA,CAAA,MAAA,CAAC;YACb,KAAK,MAAM,OAAO,IAAI,uBAAA,IAAI,8BAAgB;gBAAE,uBAAA,IAAI,8BAAgB,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC;YAC1F,IAAI,CAAC,uBAAA,IAAI,6BAAe,IAAI,KAAK,CAAC,aAAa,EAAE,CAAC,MAAM;gBAAE,uBAAA,IAAI,yBAAkB,IAAI,MAAA,CAAC;QACzF,CAAC,EAAC,CAAC,CAAC,CAAC;QAEL,wBAAwB;QACxB,MAAM,CAAC,MAAM,CAAC,uBAAuB,CAAC,SAAS,CAAC,CAAC,SAAS,EAAE,EAAE;YAC1D,SAAS,CAAC,MAAM,GAAG,uBAAA,IAAI,iCAAmB,CAAC;QAC/C,CAAC,CAAC,CAAC;IACP,CAAC;IASD;;OAEG;IACH,IAAI,kBAAkB,CAAC,KAAK;QACxB,uBAAA,IAAI,6BAAsB,KAAK,MAAA,CAAC;QAChC,OAAO,uBAAA,IAAI,iCAAmB,CAAC;IACnC,CAAC;IAED,IAAI,IAAI;QACJ,OAAO,uBAAA,IAAI,oBAAM,CAAC;IACtB,CAAC;IAED,IAAI,aAAa;QACb,OAAO,uBAAA,IAAI,6BAAe,CAAC;IAC/B,CAAC;IAED,aAAa,CAAC,OAAO,EAAC,WAAW;QAC7B,uBAAA,IAAI,8BAAgB,CAAC,OAAO,CAAC,GAAG,WAAW,CAAC;QAC5C,WAAW,CAAC,UAAU,EAAE,CAAC,IAAI,CAAC,CAAC;QAC/B,KAAK,MAAM,aAAa,IAAI,WAAW,CAAC,SAAS,EAAE;YAC/C,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,WAAW,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;SACrE;IAEL,CAAC;IAED,sGAAsG;IACtG;;;;OAIG;IACH,KAAK,CAAC,YAAY,CAAC,WAAW,EAAC,QAAQ,EAAC,OAAO,GAAG,EAAE;QAChD,MAAM,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,EAAC,KAAK,EAAE,EAAE,EAAC,OAAO,EAAE,GAAG,EAAC,MAAM,EAAE,CAAC,EAAC,EAAC,OAAO,CAAC,CAAC;QAC1E,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACnC,IAAI,WAAW,GAAG,EAAE,CAAC;YACrB,IAAI,YAAY,CAAC;YACjB,MAAM,KAAK,GAAG,WAAW,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;gBACzC,MAAM,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC;gBAC9B,OAAO,CAAC,KAAK,IAAI,MAAM,EAAE,KAAK,IAAI,CAAC,CAAC;gBACpC,IAAI,OAAO,CAAC,KAAK,IAAI,CAAC,EAAE;oBACpB,IAAI,YAAY,IAAI,IAAI;wBAAE,MAAM,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;oBACxD,WAAW,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;oBAC/B,MAAM,CAAC,EAAC,OAAO,EAAC,KAAK,EAAC,KAAK,EAAC,IAAI,EAAC,CAAC,CAAC;iBACtC;gBAED,IAAI,MAAM,EAAE,SAAS,IAAI,IAAI,EAAE;oBAC3B,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;oBACnC,IACI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,IAAI,WAAW,CAAC,MAAM,KAAK,OAAO,CAAC,MAAM,CAAC;wBAC7D,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,IAAI,WAAW,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,KAAK,CAAC,CAAC,EACnE;wBACE,IAAI,YAAY,IAAI,IAAI;4BAAE,MAAM,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;wBACxD,WAAW,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;wBAC/B,OAAO,CAAC,WAAW,CAAC,CAAC;qBACxB;iBACJ;YACL,CAAC,CAAC,CAAC;YAEH,IAAI,OAAO,CAAC,OAAO,GAAG,CAAC,EAAE;gBACrB,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;oBACpB,YAAY,GAAG,MAAM,CAAC,UAAU,CAAC,GAAG,EAAE;wBAClC,WAAW,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;wBAC/B,MAAM,CAAC,EAAC,OAAO,EAAC,IAAI,EAAC,KAAK,EAAC,KAAK,EAAC,CAAC,CAAC;oBACvC,CAAC,EAAC,OAAO,CAAC,OAAO,CAAC,CAAC;iBACtB;qBAAM;oBACH,YAAY,GAAG,MAAM,CAAC,UAAU,CAAC,GAAG,EAAE;wBAClC,WAAW,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;wBAC/B,OAAO,CAAC,WAAW,CAAC,CAAC;oBACzB,CAAC,EAAC,OAAO,CAAC,OAAO,CAAC,CAAC;iBACtB;aACJ;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;;;OAIG;IACF,KAAK,CAAC,eAAe,CAAC,QAAQ;QAC3B,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAC,MAAM,EAAE,EAAE;YAClC,MAAM,CAAC,UAAU,CAAC,GAAG,EAAE;gBACnB,IAAI;oBACA,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC;iBACvB;gBAAC,OAAO,KAAK,EAAE;oBACZ,MAAM,CAAC,KAAK,CAAC,CAAA;iBAChB;YACL,CAAC,EAAC,CAAC,CAAC,CAAC;QACT,CAAC,CAAC,CAAA;IACN,CAAC;CACJ;;AAED;;;;;GAKG;AACH,MAAM,CAAC,KAAK,UAAU,WAAW,CAAC,QAAQ,EAAC,KAAK,GAAG,CAAC;IAChD,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAC,MAAM,EAAE,EAAE;QAClC,MAAM,CAAC,UAAU,CAAC,GAAG,EAAE;YACnB,IAAI;gBACA,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC;aACvB;YAAC,OAAO,KAAK,EAAE;gBACZ,MAAM,CAAC,KAAK,CAAC,CAAA;aAChB;QACL,CAAC,EAAC,KAAK,CAAC,CAAC;IACb,CAAC,CAAC,CAAA;AACN,CAAC;AAED;;;;;GAKG;AAEH;;;;GAIG;AACH,MAAM,CAAC,KAAK,UAAU,YAAY,CAAC,WAAW,EAAC,QAAQ,EAAC,OAAO,GAAG,EAAE;IAChE,MAAM,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,EAAC,KAAK,EAAE,EAAE,EAAC,OAAO,EAAE,GAAG,EAAC,MAAM,EAAE,CAAC,EAAC,EAAC,OAAO,CAAC,CAAC;IAC1E,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;QACnC,IAAI,WAAW,GAAG,EAAE,CAAC;QACrB,IAAI,YAAY,CAAC;QACjB,MAAM,KAAK,GAAG,WAAW,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YACzC,MAAM,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC;YAC9B,OAAO,CAAC,KAAK,IAAI,MAAM,EAAE,KAAK,IAAI,CAAC,CAAC;YACpC,IAAI,OAAO,CAAC,KAAK,IAAI,CAAC,EAAE;gBACpB,IAAI,YAAY,IAAI,IAAI;oBAAE,MAAM,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;gBACxD,WAAW,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;gBAC/B,MAAM,CAAC,EAAC,OAAO,EAAC,KAAK,EAAC,KAAK,EAAC,IAAI,EAAC,CAAC,CAAC;aACtC;YAED,IAAI,MAAM,EAAE,SAAS,IAAI,IAAI,EAAE;gBAC3B,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;gBACnC,IACI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,IAAI,WAAW,CAAC,MAAM,KAAK,OAAO,CAAC,MAAM,CAAC;oBAC7D,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,IAAI,WAAW,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,KAAK,CAAC,CAAC,EACnE;oBACE,IAAI,YAAY,IAAI,IAAI;wBAAE,MAAM,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;oBACxD,WAAW,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;oBAC/B,OAAO,CAAC,WAAW,CAAC,CAAC;iBACxB;aACJ;QACL,CAAC,CAAC,CAAC;QAEH,IAAI,OAAO,CAAC,OAAO,GAAG,CAAC,EAAE;YACrB,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;gBACpB,YAAY,GAAG,MAAM,CAAC,UAAU,CAAC,GAAG,EAAE;oBAClC,WAAW,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;oBAC/B,MAAM,CAAC,EAAC,OAAO,EAAC,IAAI,EAAC,KAAK,EAAC,KAAK,EAAC,CAAC,CAAC;gBACvC,CAAC,EAAC,OAAO,CAAC,OAAO,CAAC,CAAC;aACtB;iBAAM;gBACH,YAAY,GAAG,MAAM,CAAC,UAAU,CAAC,GAAG,EAAE;oBAClC,WAAW,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;oBAC/B,OAAO,CAAC,WAAW,CAAC,CAAC;gBACzB,CAAC,EAAC,OAAO,CAAC,OAAO,CAAC,CAAC;aACtB;SACJ;IACL,CAAC,CAAC,CAAC;AACP,CAAC;AAED,MAAM,OAAO,mBAAmB;IAC5B;QACI,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;IACpB,CAAC;IACD,SAAS,CAAC,QAAQ;QACd,OAAO,aAAa,CAAC,IAAI,CAAC,KAAK,EAAC,QAAQ,CAAC,CAAC;IAC9C,CAAC;IACD,WAAW,CAAC,KAAK;QACb,eAAe,CAAC,IAAI,CAAC,KAAK,EAAC,KAAK,CAAC,CAAC;IACtC,CAAC;IACD,YAAY,CAAC,SAAS,EAAC,WAAW,GAAG,IAAI;QACrC,KAAK,IAAI,aAAa,GAAG,CAAC,EAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAC,aAAa,EAAE,EAAE;YAC1E,IAAI;gBACA,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,CAAC;aACxC;YAAC,OAAO,KAAK,EAAE;gBACZ,IAAI,WAAW;oBAAE,WAAW,CAAC,KAAK,CAAC,CAAC;aACvC;SACJ;IACL,CAAC;CAEJ;AAGD,WAAW;AACX,OAAO,KAAK,UAAU,MAAM,6BAA6B,CAAC;AAC1D;;;;;GAKG;AACH,SAAS,iBAAiB,CAAC,QAAQ,CAAA,SAAS,EAAC,YAAY,EAAC,SAAS;IAC/D,6BAA6B;IACzB,KAAK,MAAM,WAAW,IAAI,YAAY,EAAE;QACpC,MAAM,SAAS,GAAG,KAAK,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;QAClD,MAAM,MAAM,GAAG,YAAY,CAAC,WAAW,CAAC,CAAC;QACzC,KAAK,IAAI,UAAU,GAAG,CAAC,EAAC,UAAU,GAAG,MAAM,CAAC,MAAM,EAAC,UAAU,EAAE,EAAE;YAC7D,MAAM,SAAS,GAAG,kBAAkB,CAAC,MAAM,CAAC,UAAU,CAAC,EAAC,IAAI,CAAC,CAAC;YAC9D,KAAK,IAAI,aAAa,GAAG,CAAC,EAAC,aAAa,GAAG,SAAS,CAAC,MAAM,EAAC,aAAa,EAAE,EAAE;gBACzE,qCAAqC;gBACrC,gFAAgF;gBAChF,MAAM,QAAQ,GAAG,SAAS,CAAC,aAAa,CAAC,CAAC;gBAC1C,MAAM,WAAW,GAAG,UAAU,CAAC,GAAG,CAAC,QAAQ,EAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,CAAC;gBAC9D,KAAK,IAAI,KAAK,GAAG,CAAC,EAAC,KAAK,IAAI,SAAS,EAAC,KAAK,EAAE,EAAE;oBAC3C,QAAQ,CAAC,SAAS,CAAC,QAAQ,CAAC;wBACxB,CAAC,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC,EAAC,WAAW,CAAC,CAAC,CAAC;wBACpC,CAAC,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC,EAAC,WAAW,CAAC,CAAC,CAAC;wBACpC,CAAC,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC,EAAC,WAAW,CAAC,CAAC,CAAC;qBACvC,CAAC,CAAC,CAAC;oBACJ,oFAAoF;oBACpF,0CAA0C;oBAC1C,GAAG;iBACN;aACJ;SACJ;KACJ;IACL,GAAG;AACP,CAAC","file":"server.js","sourcesContent":["import { world, system } from \"@minecraft/server\";\r\nimport { ChunkManager, getSubchunksCoords } from './chunk.js';\r\nimport { randInt } from '../js_modules/random.js';\r\nimport { insertToArray, deleteFromArray } from \"../js_modules/array.js\";\r\nimport * as Debug from './../plugins/debug/debug'\r\n\r\n/**\r\n * @description - Class with helper functions that relate to scheduling or backend functioning of the server.\r\n */\r\nexport class Server {\r\n    constructor(initialTick = 0) {\r\n        this.#tick = initialTick;\r\n\r\n        //## Relative Tick, Loaded Players, Custom Events\r\n        system.runInterval(() => {\r\n            this.#tick++;\r\n            for (const eventId in this.#eventsRegister) this.#eventsRegister[eventId].execute?.(this);\r\n            if (!this.#playersLoaded && world.getAllPlayers().length) this.#playersLoaded = true;\r\n        },1);\r\n\r\n        //## Cancel Termination:\r\n        system.events.beforeWatchdogTerminate.subscribe((eventData) => {\r\n            eventData.cancel = this.#watchdogTerminate;\r\n        });\r\n    }\r\n\r\n    #eventsRegister = {}\r\n    events = {}\r\n\r\n    #tick = 0;\r\n    #playersLoaded = false;\r\n    #watchdogTerminate = false;\r\n\r\n    /**\r\n     * @param {boolean} value - Set to `true` to cancel watchdog server termination.\r\n     */\r\n    set cancelTerminations(value) {\r\n        this.#watchdogTerminate = value;\r\n        return this.#watchdogTerminate;\r\n    }\r\n\r\n    get tick() {\r\n        return this.#tick;\r\n    }\r\n\r\n    get playersLoaded() {\r\n        return this.#playersLoaded;\r\n    }\r\n\r\n    registerEvent(eventId,eventObject) {\r\n        this.#eventsRegister[eventId] = eventObject;\r\n        eventObject.initialize?.(this);\r\n        for (const eventCallback in eventObject.callbacks) {\r\n            this.events[eventCallback] = eventObject.callbacks[eventCallback];\r\n        }\r\n        \r\n    }\r\n\r\n    //! The following functions are DEPRECATED and left only for compatibility. Use other exports instead.\r\n    /** !!DEPRECATED!! use other exports instead\r\n     * @param {object} eventObject Object containing `subscribe()` and `unsubscribe()` methods.\r\n     * @param {Function} callback Callback that gets passed event data, it must return an object that contains property `tries` that modifies the tries counter and a property `saveValue` which gets saved and counts the event as success if its value isn't nullish.\r\n     * @param {EventWaitOptions} options Options that define how to wait for the event.\r\n     */\r\n    async waitForEvent(eventObject,callback,options = {}) {\r\n        const OPTIONS = Object.assign({tries: 10,timeout: 200,amount: 1},options);\r\n        return new Promise((resolve, reject) => {\r\n            let savedEvents = [];\r\n            let timeoutIndex;\r\n            const event = eventObject.subscribe((data) => {\r\n                const result = callback(data);\r\n                OPTIONS.tries += result?.tries ?? 0;\r\n                if (OPTIONS.tries <= 0) {\r\n                    if (timeoutIndex != null) system.clearRun(timeoutIndex);\r\n                    eventObject.unsubscribe(event);\r\n                    reject({timeout:false,tries:true});\r\n                }\r\n                \r\n                if (result?.saveValue != null) {\r\n                    savedEvents.push(result.saveValue);\r\n                    if (\r\n                        (OPTIONS.amount > 0 && savedEvents.length === OPTIONS.amount) || \r\n                        (OPTIONS.amount < 0 && savedEvents.length + OPTIONS.amount === 0)\r\n                    ) {\r\n                        if (timeoutIndex != null) system.clearRun(timeoutIndex);\r\n                        eventObject.unsubscribe(event);\r\n                        resolve(savedEvents);\r\n                    }\r\n                }\r\n            });\r\n\r\n            if (OPTIONS.timeout > 0) {\r\n                if (OPTIONS.amount > 0) {\r\n                    timeoutIndex = system.runTimeout(() => {\r\n                        eventObject.unsubscribe(event);\r\n                        reject({timeout:true,tries:false});\r\n                    },OPTIONS.timeout);\r\n                } else {\r\n                    timeoutIndex = system.runTimeout(() => {\r\n                        eventObject.unsubscribe(event);\r\n                        resolve(savedEvents);\r\n                    },OPTIONS.timeout);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * !!DEPRECATED!! use other exports instead\r\n     * @param {Function} callback Callback that runs on the next tick,its return value is resolved or its error is rejected.\r\n     * @returns {Promise}\r\n     */\r\n     async waitForNextTick(callback) {\r\n        return new Promise((resolve,reject) => {\r\n            system.runTimeout(() => {\r\n                try {\r\n                    resolve(callback());\r\n                } catch (error) {\r\n                    reject(error)\r\n                }\r\n            },1);\r\n        })\r\n    }\r\n}\r\n\r\n/**\r\n * Returns promise that executes the callback function and gets resolved/rejected on the defined following tick.\r\n * @param {Function} callback Callback that runs on the defined tick, its return value is resolved or its error is rejected.\r\n * @param {number} ticks Amount of ticks to wait for. Defaults to the next tick (1).\r\n * @returns {Promise}\r\n */\r\nexport async function waitForTick(callback,ticks = 1) {\r\n    return new Promise((resolve,reject) => {\r\n        system.runTimeout(() => {\r\n            try {\r\n                resolve(callback());\r\n            } catch (error) {\r\n                reject(error)\r\n            }\r\n        },ticks);\r\n    })\r\n}\r\n\r\n/**\r\n * @typedef EventWaitOptions Options that define how to wait for the event.\r\n * @property {number} tries A variable that changes everytime the event fires depending on the condition return value if it is a number. Getting tires to/below 0 results in rejection of the promise.\r\n * @property {number} timeout Number of ticks before rejecting the promise. Enter 0 for infinite timeout (not recommended).\r\n * @property {number} amount Number of events to wait for before resolving the promise, it must get there or else the promise times out. 0 will wait until the timeout and resolve everything that met the condition. Negative values will resolve the promise even if it doesn't get to the requested amount.\r\n */\r\n\r\n/**\r\n * @param {object} eventObject Object containing `subscribe()` and `unsubscribe()` methods.\r\n * @param {Function} callback Callback that gets passed event data, it must return an object that contains property `tries` that modifies the tries counter and a property `saveValue` which gets saved and counts the event as success if its value isn't nullish.\r\n * @param {EventWaitOptions} options Options that define how to wait for the event.\r\n */\r\nexport async function waitForEvent(eventObject,callback,options = {}) {\r\n    const OPTIONS = Object.assign({tries: 10,timeout: 200,amount: 1},options);\r\n    return new Promise((resolve, reject) => {\r\n        let savedEvents = [];\r\n        let timeoutIndex;\r\n        const event = eventObject.subscribe((data) => {\r\n            const result = callback(data);\r\n            OPTIONS.tries += result?.tries ?? 0;\r\n            if (OPTIONS.tries <= 0) {\r\n                if (timeoutIndex != null) system.clearRun(timeoutIndex);\r\n                eventObject.unsubscribe(event);\r\n                reject({timeout:false,tries:true});\r\n            }\r\n            \r\n            if (result?.saveValue != null) {\r\n                savedEvents.push(result.saveValue);\r\n                if (\r\n                    (OPTIONS.amount > 0 && savedEvents.length === OPTIONS.amount) || \r\n                    (OPTIONS.amount < 0 && savedEvents.length + OPTIONS.amount === 0)\r\n                ) {\r\n                    if (timeoutIndex != null) system.clearRun(timeoutIndex);\r\n                    eventObject.unsubscribe(event);\r\n                    resolve(savedEvents);\r\n                }\r\n            }\r\n        });\r\n\r\n        if (OPTIONS.timeout > 0) {\r\n            if (OPTIONS.amount > 0) {\r\n                timeoutIndex = system.runTimeout(() => {\r\n                    eventObject.unsubscribe(event);\r\n                    reject({timeout:true,tries:false});\r\n                },OPTIONS.timeout);\r\n            } else {\r\n                timeoutIndex = system.runTimeout(() => {\r\n                    eventObject.unsubscribe(event);\r\n                    resolve(savedEvents);\r\n                },OPTIONS.timeout);\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexport class ServerEventCallback {\r\n    constructor() {\r\n        this.saved = [];\r\n    }\r\n    subscribe(callback) {\r\n        return insertToArray(this.saved,callback);\r\n    }\r\n    unsubscribe(index) {\r\n        deleteFromArray(this.saved,index);\r\n    }\r\n    runCallbacks(eventData,errorHandle = null) {\r\n        for (let callbackIndex = 0;callbackIndex < this.saved.length;callbackIndex++) {\r\n            try {\r\n                this.saved[callbackIndex](eventData);\r\n            } catch (error) {\r\n                if (errorHandle) errorHandle(error);\r\n            }\r\n        }   \r\n    }\r\n    saved;\r\n}\r\n\r\n\r\n//! TESTING\r\nimport * as VectorMath from '../js_modules/vectorMath.js';\r\n/**\r\n * !! TESTING !!\r\n * @param {*} callback \r\n * @param {*} loadedChunks \r\n * @param {*} tickSpeed \r\n */\r\nfunction executeRandomTick(callback/*Array*/,loadedChunks,tickSpeed) {\r\n    //if (callbackArray.length) {\r\n        for (const dimensionId in loadedChunks) {\r\n            const dimension = world.getDimension(dimensionId);\r\n            const chunks = loadedChunks[dimensionId];\r\n            for (let chunkIndex = 0;chunkIndex < chunks.length;chunkIndex++) {\r\n                const subChunks = getSubchunksCoords(chunks[chunkIndex],true);\r\n                for (let subChunkIndex = 0;subChunkIndex < subChunks.length;subChunkIndex++) {\r\n                    //!the performance problem lies here:\r\n                    //!40-45% CPU Usage Getting The Block, 40-45% CPU Usage Generating the Number :/\r\n                    const subChunk = subChunks[subChunkIndex];\r\n                    const subChunkEnd = VectorMath.sum(subChunk,{x:15,y:15,z:15});\r\n                    for (let index = 0;index <= tickSpeed;index++) {\r\n                        callback(dimension.getBlock({\r\n                            x: randInt(subChunk.x,subChunkEnd.x),\r\n                            y: randInt(subChunk.y,subChunkEnd.y),\r\n                            z: randInt(subChunk.z,subChunkEnd.z)\r\n                        }));\r\n                        //for (let callbackIndex = 0;callbackIndex < callbackArray.length;callbackIndex++) {\r\n                        //    callbackArray[callbackIndex](block);\r\n                        //}\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    //}\r\n}\r\n"],"sourceRoot":"../../scripts/"}