{"version":3,"sources":["mc_modules/players.js"],"names":[],"mappings":"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","file":"players.js","sourcesContent":["import * as Mc from \"@minecraft/server\";\nfunction hasItem(entity, typeId, data, amount = { min: 1, max: 64 }) {\n    let hasItem = false;\n    const inventory = entity.getComponent('inventory');\n    const container = inventory.container;\n    const inventorySize = inventory.inventorySize;\n    for (let slot = 0; slot < inventorySize; slot++) {\n        const item = container.getItem(slot);\n        if (item && item.typeId === typeId) {\n            if (item.data === data || data < 0) {\n                if (item.amount >= amount.min && item.amount <= amount.max) {\n                    hasItem = true;\n                }\n            }\n        }\n    }\n    return hasItem\n}\n\nfunction hasItemInv(entity, typeId, data, amount = { min: 1, max: 64 }) {\n    let hasItem = false;\n    let totalAmount = 0;\n    const inventory = entity.getComponent('inventory');\n    const container = inventory.container;\n    const inventorySize = inventory.inventorySize;\n    for (let slot = 0; slot < inventorySize; slot++) {\n        const item = container.getItem(slot);\n        if (item && item.typeId === typeId) {\n            if (item.data === data || data < 0) {\n                totalAmount += item.amount;\n                if (item.amount > amount.max) {\n                    hasItem = false;\n                    break;\n                }\n            }\n        }\n    }\n    if (totalAmount >= amount.min && totalAmount <= amount.max) {\n        hasItem = true;\n    }\n    return hasItem\n}\n\nfunction clearItemInv(entity, typeId, type, data, amount = { min: 4, max: 64 }) {\n    const inventory = entity.getComponent('inventory');\n    const container = inventory.container;\n    const inventorySize = inventory.inventorySize;\n    let totalAmount = 0;\n    let clearSlots = []; //[slottypeId, clearAmount]\n    for (let slot = 0; slot < inventorySize; slot++) {\n        const item = container.getItem(slot);\n        if (item && item.typeId === typeId) {\n            if (item.data === data || data < 0) {\n                const left2Clear = amount.max - totalAmount;\n                if (item.amount >= left2Clear) {\n                    clearSlots.push([slot, item.amount - left2Clear]);\n                    totalAmount += left2Clear;\n                    break;\n                } else {\n                    clearSlots.push([slot, 0]);\n                    totalAmount += item.amount;\n                }\n            }\n        }\n    }\n    if (totalAmount < amount.min) {\n        totalAmount = 0;\n        return totalAmount\n    }\n    for (const clearSlot of clearSlots) {\n        container.setItem(clearSlot[0], new ItemStack(type, clearSlot[1], data));\n    }\n    return totalAmount\n}\n\nfunction clearItem(entity, typeId, type, data, amount = { min: 1, max: 64 }) {\n    const inventory = entity.getComponent('inventory');\n    const container = inventory.container;\n    const inventorySize = inventory.inventorySize;\n    let clearAmount = null;\n    for (let slot = 0; slot < inventorySize; slot++) {\n        const item = container.getItem(slot);\n        if (item && item.typeId === typeId) {\n            if (item.data === data || data < 0) {\n                clearAmount = item.amount;\n                if (item.amount < amount.min) {\n                    clearAmount = 0;\n                }\n                if (item.amount > amount.max) {\n                    clearAmount = amount.max\n                }\n                container.setItem(slot, new ItemStack(type, item.amount - clearAmount, item.data));\n            }\n        }\n    }\n    return clearAmount\n}\n\nexport function getEquipedItem(entity) {\n    const container = entity.getComponent('inventory').container;\n    return container.getItem(entity.selectedSlot);\n}\n\n/**\n * \n * @param {string} message \n * @param {string} [senderText]\n * @param {Mc.Player|MC.Player[]} [player]\n */\nexport function sendMessage(message,senderText = null,player = null) {\n    const messageText = senderText == null ? message : `[${senderText}Â§r] ${message}`;\n    if (!player) {\n        Mc.world.sendMessage(messageText);\n    } else {\n        if (!Array.isArray(player)) {\n            player.sendMessage(messageText);\n        } else {\n            for (let playerIndex = 0;playerIndex < player.length;playerIndex++) {\n                player[playerIndex].sendMessage(messageText);\n            }\n        }\n    }\n}"]}