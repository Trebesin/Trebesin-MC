{"version":3,"sources":["js_modules/random.js"],"names":[],"mappings":"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","file":"random.js","sourcesContent":["/*\r\n    \"random.js\" - Helper functions to generate pseudo-random numbers/values.\r\n    Copyright (C) 2023  PavelDobCZ23\r\n\r\n    This program is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    This program is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n    GNU General Public License for more details.\r\n\r\n    You should have received a copy of the GNU General Public License\r\n    along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n*/\r\n\r\n/**\r\n * @param {number} min Minimal number to be chosen, inclusive.\r\n * @param {number} max maximal number to be chosen, inclusive.\r\n * @returns {number} Uniformly selected random integer number.\r\n */\r\nexport function randInt(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\n/**\r\n * @param {number} min Minimal number to be chosen, inclusive.\r\n * @param {number} max maximal number to be chosen, exclusive.\r\n * @returns {number} Uniformly selected random integer number.\r\n */\r\nexport function randFloat(min, max) {\r\n    return Math.random() * (max - min) + min;\r\n}\r\n\r\n/**\r\n * @param {any[]} array Array to select random element from.\r\n * @param {number[]} [weights] Optional weights coresponding to each element by index.\r\n * @returns {any} Randomly selected elements.\r\n */\r\nexport function randChoice(array, weights = null) {\r\n    let totalWeight = 0;\r\n    for (let index = 0; index < array.length; index++) {\r\n        totalWeight += weights[index] ?? 1;\r\n    }\r\n    let choice = null;\r\n\r\n    while (!choice) {\r\n        const index = randInt(0,array.length-1);\r\n        if (weights[index] ?? 1/totalWeight > Math.random()) choice = array[index];\r\n    }\r\n    return choice\r\n}\r\n\r\nfunction randomTriInt(min, max, tri) {\r\n\r\n}\r\n\r\nfunction randomTriFloat() {\r\n    \r\n}\r\n\r\n/*\r\n    !! License terms defined in the first line of the file do not apply to the parts of the file that come after this comment.\r\n*/\r\n//! None of this is mine:\r\n//const f = 0.5;\r\n//const n = 0.5;\r\n//const o = 0.0645497224;\r\nfor (let i = 0;i<32769;i++) {\r\n    const number = rndN(2);\r\n    if (number <= 2.5 && number >= -2.5) {\r\n        console.log(`${number}`.replace('.',','));\r\n    };\r\n}\r\n\r\nfunction gurn() {\r\n    let u = 1 - Math.random();\r\n    let v = Math.random();\r\n    return Math.sqrt( -2.0 * Math.log( u ) ) * Math.cos( 2.0 * Math.PI * v);\r\n}\r\n\r\nfunction randn_bm() {\r\n    let u = 0, v = 0;\r\n    while(u === 0) u = Math.random(); //Converting [0,1) to (0,1)\r\n    while(v === 0) v = Math.random();\r\n    let num = Math.sqrt( -2.0 * Math.log( u ) ) * Math.cos( 2.0 * Math.PI * v );\r\n    num = num / 10.0 + 0.5; // Translate to 0 -> 1\r\n    if (num > 1 || num < 0) return randn_bm() // resample between 0 and 1\r\n    return num\r\n  }\r\n\r\n  const randn_bm_extra = (min, max, skew = 1) => {\r\n    var u = 0, v = 0;\r\n    while(u === 0) u = Math.random(); //Converting [0,1) to (0,1)\r\n    while(v === 0) v = Math.random();\r\n    let num = Math.sqrt( -2.0 * Math.log( u ) ) * Math.cos( 2.0 * Math.PI * v );\r\n\r\n    num = num / 10.0 + 0.5; // Translate to 0 -> 1\r\n    if (num > 1 || num < 0) num = randn_bm_extra(min, max, skew); // resample between 0 and 1 if out of range\r\n    num = Math.pow(num, skew); // Skew\r\n    num *= max - min; // Stretch to fill range\r\n    num += min; // offset to min\r\n    return num;\r\n}\r\n\r\nfunction rndN(n) {\r\n\tvar rand = 0;\r\n  \r\n  for (var i = 0; i < n; i += 1) {\r\n  \trand += Math.random();\r\n  }\r\n\r\n  // return (rand - n/2) / (n/2);\r\n  return rand / n\r\n}\r\n\r\nexport function mulberry32seed(a) {\r\n    return function() {\r\n      var t = a += 0x6D2B79F5;\r\n      t = Math.imul(t ^ t >>> 15, t | 1);\r\n      t ^= t + Math.imul(t ^ t >>> 7, t | 61);\r\n      return ((t ^ t >>> 14) >>> 0) / 4294967296;\r\n    }\r\n}"]}