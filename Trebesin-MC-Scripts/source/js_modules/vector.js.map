{"version":3,"sources":["js_modules/vector.js"],"names":[],"mappings":"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","file":"vector.js","sourcesContent":["/*\n    \"vector.js\" - Helper functions to work with vectors.\n    Copyright (C) 2023  PavelDobCZ23\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n//!DEPRECATED - Left for backwards compatibility. Use vectorMath.js!\n\n/**\n * @param {object} vector \n **/\nexport function getVectorLength(vector) {\n    return Math.sqrt(vector.x**2+vector.y**2+vector.z**2);\n}\n/**\n * @param {object} vector\n * @param {number} length\n **/\nexport function setVectorLength(vector, length) {\n    const vectorLength = getVectorLength(vector);\n    const ratio = length/vectorLength;\n    vector.x *= ratio;\n    vector.y *= ratio;\n    vector.z *= ratio;\n\n    return vector\n}\n\n/**\n * Sums 2 vectors together.\n * @param {object} vectorA First vector to sum.\n * @param {object} vectorB Second vector to sum.\n * @returns {object} New object with the result of the sum of the vector.\n */\nexport function sumVectors(vectorA,vectorB) {\n    return {x:vectorA.x+vectorB.x,y:vectorA.y+vectorB.y,z:vectorA.z+vectorB.z};\n}\n\n/**\n * Subs 2 vectors together.\n * @param {object} vectorA First vector to sub.\n * @param {object} vectorB Second vector to sub.\n * @returns {object} New object with the result of the sub of the vector.\n */\nexport function subVectors(vectorA,vectorB) {\n    return {x:vectorA.x-vectorB.x,y:vectorA.y-vectorB.y,z:vectorA.z-vectorB.z};\n}\n\n/**\n * Multiply vector.\n * @param {object} vector Vector to multiply.\n * @param {number} amount Multiplication.\n * @returns {object} Result of the vector multiplication.\n */\nexport function multiplyVector(vector,amount) {\n    return {x:vector.x*amount,y:vector.y*amount,z:vector.z*amount};\n}\n\n/**\n * Copies a vector into a new object.\n * @param {object} vector Vector to copy.\n * @returns {object} New object of the same vector.\n */\nexport function copyVector(vector) {\n    return {x:vector.x,y:vector.y,z:vector.z};\n}\n\n/**\n * Floors the vector.\n * @param {object} vector Vector to floor.\n * @returns {object} Result of flooring all axis of the vector.\n */\nexport function floorVector(vector) {\n    return {x:Math.floor(vector.x),y:Math.floor(vector.y),z:Math.floor(vector.z)};\n}\n\n\nexport function compareVectors(vectorA,vectorB) {\n    return (vectorA.x === vectorB.x && vectorA.y === vectorB.y && vectorA.z === vectorB.z);\n}\n\nexport function getAbsoluteVector(vector) {\n    return {x:Math.abs(vector.x),y:Math.abs(vector.y),z:Math.abs(vector.z)}\n}\n\nexport function getDirectionFace(vector) {\n    const absVector = getAbsoluteVector(vector);\n    if (absVector.x > absVector.y && absVector.x > absVector.z) {\n        if (vector.x > 0) return 'west'\n        else return 'east'\n    }\n    if (absVector.z > absVector.x && absVector.z > absVector.y) {\n        if (vector.z > 0) return 'north'\n        return 'south';\n    }\n    if (absVector.y > absVector.x && absVector.y > absVector.z) {\n        if (vector.y > 0) return 'down'\n        else return 'up'\n    }\n}"]}