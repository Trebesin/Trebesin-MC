{"version":3,"sources":["plugins/debug/debug.js"],"names":[],"mappings":"AAAA,OAAO;AACP,OAAO,EAAE,KAAK,EAAE,MAAM,mBAAmB,CAAC;AAC1C,OAAO,KAAK,WAAW,MAAM,yBAAyB,CAAC;AACvD,UAAU;AACV,OAAO,EAAE,WAAW,EAAE,MAAM,0BAA0B,CAAC;AACvD,OAAO,EAAE,iBAAiB,EAAE,MAAM,sCAAsC,CAAC;AAEzE,IAAI,YAAY,GAAG,KAAK,CAAC;AACzB,MAAM,MAAM,GAAG,IAAI,iBAAiB,CAAC;IACjC,MAAM,EAAE;QACJ,GAAG,EAAE,WAAW,CAAC,SAAS,CAAC,GAAG,CAAC,gBAAgB,CAAC;QAChD,QAAQ,EAAE,WAAW,CAAC,SAAS,CAAC,GAAG,CAAC,qBAAqB,CAAC;QAC1D,QAAQ,EAAE,WAAW,CAAC,SAAS,CAAC,GAAG,CAAC,qBAAqB,CAAC;KAC7D;CACJ,CAAC,CAAA;AAEF,MAAM,CAAC,MAAM,IAAI,GAAG,OAAO,CAAC;AAC5B,MAAM,CAAC,KAAK,UAAU,IAAI;IACtB,MAAM,MAAM,CAAC,OAAO,EAAE,CAAC;IACvB,YAAY,GAAG,IAAI,CAAC;AACxB,CAAC;AAED,MAAM,UAAU,cAAc,CAAC,OAAO;IAClC,KAAK,MAAM,MAAM,IAAI,KAAK,CAAC,UAAU,CAAC,EAAC,IAAI,EAAC,CAAC,KAAK,CAAC,EAAC,CAAC,EAAE;QACnD,WAAW,CAAC,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,EAAC,sBAAsB,CAAC,EAAE,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC;KACzF;AACL,CAAC;AACD;;;GAGG;AACH,MAAM,CAAC,KAAK,UAAU,UAAU,CAAC,OAAO,EAAC,OAAO;IAC5C,MAAM,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,EAAC,GAAG,EAAC,IAAI,EAAC,KAAK,EAAC,IAAI,EAAC,OAAO,EAAC,IAAI,EAAC,EAAC,OAAO,CAAC,CAAC;IAC1E,IAAI,OAAO,CAAC,KAAK;QAAE,cAAc,CAAC,GAAG,OAAO,EAAE,CAAC,CAAC;IAChD,IAAI,OAAO,CAAC,OAAO;QAAE,OAAO,CAAC,IAAI,CAAC,GAAG,OAAO,EAAE,CAAC,CAAC;IAChD,IAAI,OAAO,CAAC,GAAG,IAAI,YAAY;QAAE,MAAM,MAAM,CAAC,OAAO,CAAC,GAAG,OAAO,EAAE,CAAC,CAAC;AACxE,CAAC","file":"debug.js","sourcesContent":["//APIs:\nimport { world } from '@minecraft/server';\nimport * as serverAdmin from '@minecraft/server-admin';\n//Modules:\nimport { sendMessage } from '../../mc_modules/players';\nimport { LoggingConnection } from '../../mc_modules/network/logging-api';\n\nlet apiConnected = false;\nconst apiLog = new LoggingConnection({\n    server: {\n        url: serverAdmin.variables.get('log-server-url'),\n        username: serverAdmin.variables.get('log-server-username'),\n        password: serverAdmin.variables.get('log-server-password')\n    }\n})\n\nexport const name = 'Debug';\nexport async function main() {\n    await apiLog.connect();\n    apiConnected = true;\n}\n\nexport function sendLogMessage(message) {\n    for (const player of world.getPlayers({tags:['log']})) {\n        sendMessage(`§o§7${message.replace('\\n','\\n§r[§o§7LOG§r]§o§7 ')}`, '§o§7LOG', player);\n    }\n}\n/**\n * Sends a log message to the world chat, MC server content log and console API server.\n * @param {string} message Log message.\n */\nexport async function logMessage(message,options) {\n    const OPTIONS = Object.assign({api:true,world:true,content:true},options);\n    if (OPTIONS.world) sendLogMessage(`${message}`);\n    if (OPTIONS.content) console.warn(`${message}`);\n    if (OPTIONS.api && apiConnected) await apiLog.sendLog(`${message}`);\n}"]}