{"version":3,"sources":["plugins/blocky_tools/workers/items.js"],"names":[],"mappings":"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","file":"items.js","sourcesContent":["//APIs:\nimport { MolangVariableMap, BlockPermutation,BlockStates, world, system, Block} from '@minecraft/server';\n//Plugins:\nimport * as Debug from './../../debug/debug';\nimport { Server } from '../../backend/backend';\n//Modules:\nimport {mapArray,insertToArray} from '../../../js_modules/array';\nimport * as FormUi from '../../../mc_modules/ui';\nimport {setBlockPermutation} from '../../block_history/block_history';\nimport { spawnBlockSelection, spawnLine } from '../../../mc_modules/particles';\nimport { getAbsoluteChunkCoord, getOriginChunkCoord} from '../../../mc_modules/chunk';\n\n\nexport function main() {\n    //## Debug Stick:\n    const showChunkBorder = {};\n    Server.events.playerEquip.subscribe((eventData) => {\n        if (eventData.itemAfter.typeId === 'trebesin:bt_debug_stick') showChunkBorder[eventData.player.id] = 1;\n        else showChunkBorder[eventData.player.id] = 0;\n    });\n    \n    Server.events.itemStartUseOn.subscribe(async (eventData) => {\n        if (eventData.item.typeId === 'trebesin:bt_debug_stick') {\n            /** @type {Block} */\n            const block = eventData.source.dimension.getBlock(eventData.block.location);\n            const propertyList = block.permutation.getAllProperties();\n            const player = eventData.source;\n\n            //let blockTagText = '';\n            //const blockTags = block.getTags();\n            //for (let tagIndex = 0;tagIndex < blockTags.length;tagIndex++) {\n            //    blockTagText += `${blockTags[tagIndex]}`;\n            //    if (tagIndex != blockTags.length - 1) blockTagText += ',';\n            //}\n            \n            const menuData = {\n                title: `${block.typeId}`,\n                withIds: true,\n                structure: []\n                \n            }\n\n            for (const propertyName in propertyList) {\n                const option = {\n                    id: propertyName\n                };\n                const propertyDefinition = BlockStates.get(propertyName);\n                const propertyType = typeof propertyDefinition.validValues[0];\n                option.label = `ยง2${propertyName} [${propertyType}]`;\n                if (propertyType === 'boolean') {\n                    option.type = 'toggle';\n                    option.defaultValue = propertyList[propertyName];\n                } else {\n                    option.type = 'dropdown';\n                    option.options = propertyDefinition.validValues.map((value) => `${value}`);\n                    option.defaultValueIndex = propertyDefinition.validValues.indexOf(propertyList[propertyName]);\n                }\n                menuData.structure.push(option);\n            }\n            if (menuData.structure.length === 0) return;\n            const response = await FormUi.modalMenu(menuData,player);\n\n            if (block?.typeId == null) return;\n            const propertyRecord = {};\n            for (const propertyName in propertyList) {\n                const propertyDefinition = BlockStates.get(propertyName);\n                const propertyType = typeof propertyDefinition.validValues[0];\n                if (propertyType === 'boolean') {\n                    propertyRecord[propertyName] = response.formValues[propertyName];\n                } else {\n                    const index = response.formValues[propertyName];\n                    propertyRecord[propertyName] = propertyDefinition.validValues[index];\n                }\n            }\n            const updatedPermutations = BlockPermutation.resolve(block.typeId, propertyRecord);\n            setBlockPermutation(block,updatedPermutations,{actorId:player.id,updateType:'blockyTools: player'});\n        }\n    });\n\n    system.runInterval(() => {\n        const players = world.getAllPlayers();\n        for (let playerIndex = 0;playerIndex < players.length;playerIndex++) {\n            const player = players[playerIndex];\n            if (showChunkBorder[player.id] === 0 || showChunkBorder[player.id] == null) continue; \n            const chunk = getOriginChunkCoord(player.location);\n            const verticalMolang = new MolangVariableMap();\n            verticalMolang.setColorRGBA('variable.color',{red:1,green:0,blue:0,alpha:1});\n            verticalMolang.setSpeedAndDirection('variable.size',384,{x:0,y:1,z:0});\n            verticalMolang.setSpeedAndDirection('variable.time',1.01,{x:0,y:0,z:0});\n\n            player.dimension.spawnParticle('trebesin:line_flex2',{x:chunk.x,y:-64,z:chunk.z},verticalMolang);\n            player.dimension.spawnParticle('trebesin:line_flex2',{x:chunk.x+16,y:-64,z:chunk.z},verticalMolang);\n            player.dimension.spawnParticle('trebesin:line_flex2',{x:chunk.x,y:-64,z:chunk.z+16},verticalMolang);\n            player.dimension.spawnParticle('trebesin:line_flex2',{x:chunk.x+16,y:-64,z:chunk.z+16},verticalMolang);\n\n            const randomColor = {red:1,green:1,blue:1,alpha:1};\n\n            const diagonalMolangPositiveZ = new MolangVariableMap();\n            diagonalMolangPositiveZ.setSpeedAndDirection('variable.size',384.3331887829,{x:0,y:384,z:16});\n            diagonalMolangPositiveZ.setSpeedAndDirection('variable.time',1.01,{x:0,y:0,z:0});\n            diagonalMolangPositiveZ.setColorRGBA('variable.color',randomColor);\n            const diagonalMolangPositiveX = new MolangVariableMap();\n            diagonalMolangPositiveX.setSpeedAndDirection('variable.size',384.3331887829, {x:16,y:384,z:0});\n            diagonalMolangPositiveX.setSpeedAndDirection('variable.time',1.01,{x:0,y:0,z:0});\n            diagonalMolangPositiveX.setColorRGBA('variable.color',randomColor);\n            const diagonalMolangNegativeZ = new MolangVariableMap();\n            diagonalMolangNegativeZ.setSpeedAndDirection('variable.size',384.3331887829, {x:0,y:384,z:-16});\n            diagonalMolangNegativeZ.setSpeedAndDirection('variable.time',1.01,{x:0,y:0,z:0});\n            diagonalMolangNegativeZ.setColorRGBA('variable.color',randomColor);\n            const diagonalMolangNegativeX = new MolangVariableMap();\n            diagonalMolangNegativeX.setSpeedAndDirection('variable.size',384.3331887829, {x:-16,y:384,z:0});\n            diagonalMolangNegativeX.setSpeedAndDirection('variable.time',1.01,{x:0,y:0,z:0});\n            diagonalMolangNegativeX.setColorRGBA('variable.color',randomColor);\n\n            player.dimension.spawnParticle('trebesin:line_flex2',{x:chunk.x,y:-64,z:chunk.z},diagonalMolangPositiveX);\n            player.dimension.spawnParticle('trebesin:line_flex2',{x:chunk.x,y:-64,z:chunk.z+16},diagonalMolangPositiveX);\n\n            player.dimension.spawnParticle('trebesin:line_flex2',{x:chunk.x,y:-64,z:chunk.z},diagonalMolangPositiveZ);\n            player.dimension.spawnParticle('trebesin:line_flex2',{x:chunk.x+16,y:-64,z:chunk.z},diagonalMolangPositiveZ);\n\n            \n            player.dimension.spawnParticle('trebesin:line_flex2',{x:chunk.x+16,y:-64,z:chunk.z},diagonalMolangNegativeX);\n            player.dimension.spawnParticle('trebesin:line_flex2',{x:chunk.x+16,y:-64,z:chunk.z+16},diagonalMolangNegativeX);\n\n            player.dimension.spawnParticle('trebesin:line_flex2',{x:chunk.x,y:-64,z:chunk.z+16},diagonalMolangNegativeZ);\n            player.dimension.spawnParticle('trebesin:line_flex2',{x:chunk.x+16,y:-64,z:chunk.z+16},diagonalMolangNegativeZ);\n        }\n    },20);\n    //## -- --\n}"]}